// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using SistemaEsmeralda.Entities.Entities;

#nullable disable

namespace SistemaEsmeralda.DataAccess.Context
{
    public partial class DbsistemaesmeraldaContext : DbContext
    {
        public DbsistemaesmeraldaContext()
        {
        }

        public DbsistemaesmeraldaContext(DbContextOptions<DbsistemaesmeraldaContext> options)
            : base(options)
        {
        }

        public virtual DbSet<tbCargos> tbCargos { get; set; }
        public virtual DbSet<tbCategorias> tbCategorias { get; set; }
        public virtual DbSet<tbClientes> tbClientes { get; set; }
        public virtual DbSet<tbDepartamentos> tbDepartamentos { get; set; }
        public virtual DbSet<tbEmpleados> tbEmpleados { get; set; }
        public virtual DbSet<tbEstadosCiviles> tbEstadosCiviles { get; set; }
        public virtual DbSet<tbFactura> tbFactura { get; set; }
        public virtual DbSet<tbFacturaDetalles> tbFacturaDetalles { get; set; }
        public virtual DbSet<tbImpuestos> tbImpuestos { get; set; }
        public virtual DbSet<tbJoyas> tbJoyas { get; set; }
        public virtual DbSet<tbMaquillajes> tbMaquillajes { get; set; }
        public virtual DbSet<tbMarcas> tbMarcas { get; set; }
        public virtual DbSet<tbMateriales> tbMateriales { get; set; }
        public virtual DbSet<tbMetodosPago> tbMetodosPago { get; set; }
        public virtual DbSet<tbMunicipios> tbMunicipios { get; set; }
        public virtual DbSet<tbPantallas> tbPantallas { get; set; }
        public virtual DbSet<tbPantallasXRoles> tbPantallasXRoles { get; set; }
        public virtual DbSet<tbPreciosBitacora> tbPreciosBitacora { get; set; }
        public virtual DbSet<tbProveedores> tbProveedores { get; set; }
        public virtual DbSet<tbRoles> tbRoles { get; set; }
        public virtual DbSet<tbSucursales> tbSucursales { get; set; }
        public virtual DbSet<tbUsuarios> tbUsuarios { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS");

            modelBuilder.Entity<tbCargos>(entity =>
            {
                entity.HasKey(e => e.Carg_Id)
                    .HasName("PK__tbCargos__B0D859FA1FCB19F0");

                entity.ToTable("tbCargos", "Gral");

                entity.Property(e => e.Carg_Cargo)
                    .IsRequired()
                    .HasMaxLength(60)
                    .IsUnicode(false);

                entity.Property(e => e.Carg_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.Carg_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.Carg_FechaModificacion).HasColumnType("datetime");

                entity.HasOne(d => d.Carg_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbCargosCarg_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.Carg_UsuarioCreacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("tbCargos_tbUsuarios_Carg_UsuarioCreacion");

                entity.HasOne(d => d.Carg_UsuarioModificacionNavigation)
                    .WithMany(p => p.tbCargosCarg_UsuarioModificacionNavigation)
                    .HasForeignKey(d => d.Carg_UsuarioModificacion)
                    .HasConstraintName("tbCargos_tbUsuarios_Carg_UsuarioModificacion");
            });

            modelBuilder.Entity<tbCategorias>(entity =>
            {
                entity.HasKey(e => e.Cate_Id)
                    .HasName("PK__tbCatego__297787C68B151F10");

                entity.ToTable("tbCategorias", "Gral");

                entity.Property(e => e.Cate_Categoria)
                    .HasMaxLength(60)
                    .IsUnicode(false);

                entity.Property(e => e.Cate_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.Cate_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.Cate_FechaModificacion).HasColumnType("datetime");

                entity.HasOne(d => d.Cate_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbCategoriasCate_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.Cate_UsuarioCreacion)
                    .HasConstraintName("tbCategorias_tbUsuarios_Cate_UsuarioCreacion");

                entity.HasOne(d => d.Cate_UsuarioModificacionNavigation)
                    .WithMany(p => p.tbCategoriasCate_UsuarioModificacionNavigation)
                    .HasForeignKey(d => d.Cate_UsuarioModificacion)
                    .HasConstraintName("tbCategorias_tbUsuarios_Cate_UsuarioModificacion");
            });

            modelBuilder.Entity<tbClientes>(entity =>
            {
                entity.HasKey(e => e.Clie_Id)
                    .HasName("PK__tbClient__5BB955038D360B94");

                entity.ToTable("tbClientes", "Gral");

                entity.Property(e => e.Clie_Apellido)
                    .IsRequired()
                    .HasMaxLength(60)
                    .IsUnicode(false);

                entity.Property(e => e.Clie_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.Clie_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.Clie_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.Clie_FechaNac).HasColumnType("datetime");

                entity.Property(e => e.Clie_Nombre)
                    .IsRequired()
                    .HasMaxLength(60)
                    .IsUnicode(false);

                entity.Property(e => e.Clie_Sexo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.Muni_Codigo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.HasOne(d => d.Clie_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbClientesClie_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.Clie_UsuarioCreacion)
                    .HasConstraintName("tbClientes_tbUsuarios_Clie_UsuarioCreacion");

                entity.HasOne(d => d.Clie_UsuarioModificacionNavigation)
                    .WithMany(p => p.tbClientesClie_UsuarioModificacionNavigation)
                    .HasForeignKey(d => d.Clie_UsuarioModificacion)
                    .HasConstraintName("tbClientes_tbUsuarios_Clie_UsuarioModificacion");

                entity.HasOne(d => d.Esta)
                    .WithMany(p => p.tbClientes)
                    .HasForeignKey(d => d.Esta_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("tbClientes_tbEstadosCiviles_Esta_Id");

                entity.HasOne(d => d.Muni_CodigoNavigation)
                    .WithMany(p => p.tbClientes)
                    .HasForeignKey(d => d.Muni_Codigo)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("tbClientes_tbMunicipios_Muni_Codigo");
            });

            modelBuilder.Entity<tbDepartamentos>(entity =>
            {
                entity.HasKey(e => e.Depa_Codigo)
                    .HasName("PK__tbDepart__8FE67C9FDADD0BA5");

                entity.ToTable("tbDepartamentos", "Gral");

                entity.Property(e => e.Depa_Codigo)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Depa_Departamento)
                    .IsRequired()
                    .HasMaxLength(60)
                    .IsUnicode(false);

                entity.Property(e => e.Depa_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.Depa_FechaModificacion).HasColumnType("datetime");

                entity.HasOne(d => d.Depa_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbDepartamentosDepa_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.Depa_UsuarioCreacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("tbUsuarios_tbUsuarios_Depa_UsuarioCreacion");

                entity.HasOne(d => d.Depa_UsuarioModificacionNavigation)
                    .WithMany(p => p.tbDepartamentosDepa_UsuarioModificacionNavigation)
                    .HasForeignKey(d => d.Depa_UsuarioModificacion)
                    .HasConstraintName("tbUsuarios_tbUsuarios_Depa_UsuarioModificacion");
            });

            modelBuilder.Entity<tbEmpleados>(entity =>
            {
                entity.HasKey(e => e.Empl_Id)
                    .HasName("PK__tbEmplea__2EB12E867CE8B809");

                entity.ToTable("tbEmpleados", "Gral");

                entity.Property(e => e.Empl_Apellido)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Empl_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.Empl_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.Empl_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.Empl_FechaNac).HasColumnType("datetime");

                entity.Property(e => e.Empl_Nombre)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.Empl_Sexo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.Muni_Codigo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.HasOne(d => d.Carg)
                    .WithMany(p => p.tbEmpleados)
                    .HasForeignKey(d => d.Carg_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("tbEmpleados_tbCargos_carg_Id");

                entity.HasOne(d => d.Empl_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbEmpleadosEmpl_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.Empl_UsuarioCreacion)
                    .HasConstraintName("tbEmpleados_tbUsuarios_Prov_UsuarioCreacion");

                entity.HasOne(d => d.Empl_UsuarioModificacionNavigation)
                    .WithMany(p => p.tbEmpleadosEmpl_UsuarioModificacionNavigation)
                    .HasForeignKey(d => d.Empl_UsuarioModificacion)
                    .HasConstraintName("tbEmpleados_tbUsuarios_Prov_UsuarioModificacion");

                entity.HasOne(d => d.Esta)
                    .WithMany(p => p.tbEmpleados)
                    .HasForeignKey(d => d.Esta_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("tbEmpleados_tbEstadosCiviles_Esta_Id");

                entity.HasOne(d => d.Muni_CodigoNavigation)
                    .WithMany(p => p.tbEmpleados)
                    .HasForeignKey(d => d.Muni_Codigo)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("tbEmpleados_tbMunicipios_Muni_Codigo");

                entity.HasOne(d => d.Sucu)
                    .WithMany(p => p.tbEmpleados)
                    .HasForeignKey(d => d.Sucu_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("tbEmpleados_tbSucursales_Sucu_Id");
            });

            modelBuilder.Entity<tbEstadosCiviles>(entity =>
            {
                entity.HasKey(e => e.Esta_Id)
                    .HasName("PK__tbEstado__D52AE7B83D3DA1C4");

                entity.ToTable("tbEstadosCiviles", "Gral");

                entity.Property(e => e.Esta_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.Esta_EstadoCivil)
                    .IsRequired()
                    .HasMaxLength(60)
                    .IsUnicode(false);

                entity.Property(e => e.Esta_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.Esta_FechaModificacion).HasColumnType("datetime");

                entity.HasOne(d => d.Esta_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbEstadosCivilesEsta_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.Esta_UsuarioCreacion)
                    .HasConstraintName("tbEstadosCiviles_tbUsuarios_Esta_UsuarioCreacion");

                entity.HasOne(d => d.Esta_UsuarioModificacionNavigation)
                    .WithMany(p => p.tbEstadosCivilesEsta_UsuarioModificacionNavigation)
                    .HasForeignKey(d => d.Esta_UsuarioModificacion)
                    .HasConstraintName("tbEstadosCiviles_tbUsuarios_Esta_UsuarioModificacion");
            });

            modelBuilder.Entity<tbFactura>(entity =>
            {
                entity.HasKey(e => e.Fact_Id)
                    .HasName("PK__tbFactur__8327E027E16CFE49");

                entity.ToTable("tbFactura", "Vent");

                entity.Property(e => e.Fact_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.Fact_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.Fact_FechaModificacion).HasColumnType("datetime");

                entity.HasOne(d => d.Clie)
                    .WithMany(p => p.tbFactura)
                    .HasForeignKey(d => d.Clie_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("tbFactura_tbClientes_Clie_Id");

                entity.HasOne(d => d.Empl)
                    .WithMany(p => p.tbFactura)
                    .HasForeignKey(d => d.Empl_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("tbFactura_tbEmpleados_Empl_Id");

                entity.HasOne(d => d.Fact_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbFacturaFact_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.Fact_UsuarioCreacion)
                    .HasConstraintName("tbFactura_tbUsuarios_Fact_UsuarioCreacion");

                entity.HasOne(d => d.Fact_UsuarioModificacionNavigation)
                    .WithMany(p => p.tbFacturaFact_UsuarioModificacionNavigation)
                    .HasForeignKey(d => d.Fact_UsuarioModificacion)
                    .HasConstraintName("tbFactura_tbUsuarios_Fact_UsuarioModificacion");

                entity.HasOne(d => d.Impu)
                    .WithMany(p => p.tbFactura)
                    .HasForeignKey(d => d.Impu_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("tbFactura_tbImpuestos_Impu_Id");

                entity.HasOne(d => d.Mepa)
                    .WithMany(p => p.tbFactura)
                    .HasForeignKey(d => d.Mepa_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("tbFactura_tbMetodosPago_Mepa_Id");
            });

            modelBuilder.Entity<tbFacturaDetalles>(entity =>
            {
                entity.HasKey(e => e.FaxD_Id)
                    .HasName("PK__tbFactur__B98BA8E220658A4B");

                entity.ToTable("tbFacturaDetalles", "Vent");

                entity.HasOne(d => d.Fact)
                    .WithMany(p => p.tbFacturaDetalles)
                    .HasForeignKey(d => d.Fact_Id)
                    .HasConstraintName("tbFacturaDetalles_tbFactura_Fact_Id");
            });

            modelBuilder.Entity<tbImpuestos>(entity =>
            {
                entity.HasKey(e => e.Impu_Id)
                    .HasName("PK__tbImpues__23E8CC884979A247");

                entity.ToTable("tbImpuestos", "Gral");

                entity.Property(e => e.Impu_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.Impu_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.Impu_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.Impu_Impuesto).HasColumnType("decimal(18, 0)");

                entity.HasOne(d => d.Impu_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbImpuestosImpu_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.Impu_UsuarioCreacion)
                    .HasConstraintName("tbImpuestos_tbUsuarios_Impu_UsuarioCreacion");

                entity.HasOne(d => d.Impu_UsuarioModificacionNavigation)
                    .WithMany(p => p.tbImpuestosImpu_UsuarioModificacionNavigation)
                    .HasForeignKey(d => d.Impu_UsuarioModificacion)
                    .HasConstraintName("tbImpuestos_tbUsuarios_Impu_UsuarioModificacion");
            });

            modelBuilder.Entity<tbJoyas>(entity =>
            {
                entity.HasKey(e => e.Joya_Id)
                    .HasName("PK__tbJoyas__51C6702362DBB39D");

                entity.ToTable("tbJoyas", "Vent");

                entity.Property(e => e.Joya_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.Joya_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.Joya_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.Joya_Imagen)
                    .IsRequired()
                    .IsUnicode(false);

                entity.Property(e => e.Joya_Nombre)
                    .IsRequired()
                    .HasMaxLength(60)
                    .IsUnicode(false);

                entity.Property(e => e.Joya_PrecioCompra).HasColumnType("numeric(8, 2)");

                entity.Property(e => e.Joya_PrecioMayor).HasColumnType("numeric(8, 2)");

                entity.Property(e => e.Joya_PrecioVenta).HasColumnType("numeric(8, 2)");

                entity.HasOne(d => d.Cate)
                    .WithMany(p => p.tbJoyas)
                    .HasForeignKey(d => d.Cate_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("tbJoyas_tbCategorias_Cate_Id");

                entity.HasOne(d => d.Joya_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbJoyasJoya_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.Joya_UsuarioCreacion)
                    .HasConstraintName("tbJoyas_tbUsuarios_Joya_UsuarioCreacion");

                entity.HasOne(d => d.Joya_UsuarioModificacionNavigation)
                    .WithMany(p => p.tbJoyasJoya_UsuarioModificacionNavigation)
                    .HasForeignKey(d => d.Joya_UsuarioModificacion)
                    .HasConstraintName("tbJoyas_tbUsuarios_Joya_UsuarioModificacion");

                entity.HasOne(d => d.Mate)
                    .WithMany(p => p.tbJoyas)
                    .HasForeignKey(d => d.Mate_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("tbJoyas_tbMateriales_Mate_Id");

                entity.HasOne(d => d.Prov)
                    .WithMany(p => p.tbJoyas)
                    .HasForeignKey(d => d.Prov_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("tbJoyas_tbProveedores_Prov_Id");
            });

            modelBuilder.Entity<tbMaquillajes>(entity =>
            {
                entity.HasKey(e => e.Maqu_Id)
                    .HasName("PK__tbMaquil__B6CC043C524D1B9F");

                entity.ToTable("tbMaquillajes", "Vent");

                entity.Property(e => e.Maqu_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.Maqu_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.Maqu_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.Maqu_Imagen)
                    .IsRequired()
                    .IsUnicode(false);

                entity.Property(e => e.Maqu_Nombre)
                    .IsRequired()
                    .HasMaxLength(60)
                    .IsUnicode(false);

                entity.Property(e => e.Maqu_PrecioCompra).HasColumnType("numeric(8, 2)");

                entity.Property(e => e.Maqu_PrecioMayor).HasColumnType("numeric(8, 2)");

                entity.Property(e => e.Maqu_PrecioVenta).HasColumnType("numeric(8, 2)");

                entity.HasOne(d => d.Maqu_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbMaquillajesMaqu_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.Maqu_UsuarioCreacion)
                    .HasConstraintName("tbMaquillajes_tbUsuarios_Maqu_UsuarioCreacion");

                entity.HasOne(d => d.Maqu_UsuarioModificacionNavigation)
                    .WithMany(p => p.tbMaquillajesMaqu_UsuarioModificacionNavigation)
                    .HasForeignKey(d => d.Maqu_UsuarioModificacion)
                    .HasConstraintName("tbMaquillajes_tbUsuarios_Maqu_UsuarioModificacion");

                entity.HasOne(d => d.Marc)
                    .WithMany(p => p.tbMaquillajes)
                    .HasForeignKey(d => d.Marc_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("tbMaquillajes_tbMarcas_Marc_Id");

                entity.HasOne(d => d.Prov)
                    .WithMany(p => p.tbMaquillajes)
                    .HasForeignKey(d => d.Prov_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("tbMaquillajes_tbProveedores_Prov_Id");
            });

            modelBuilder.Entity<tbMarcas>(entity =>
            {
                entity.HasKey(e => e.Marc_Id)
                    .HasName("PK__tbMarcas__DB7EE3BACA61051D");

                entity.ToTable("tbMarcas", "Gral");

                entity.Property(e => e.Marc_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.Marc_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.Marc_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.Marc_Marca)
                    .IsRequired()
                    .HasMaxLength(60)
                    .IsUnicode(false);

                entity.HasOne(d => d.Marc_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbMarcasMarc_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.Marc_UsuarioCreacion)
                    .HasConstraintName("tbMarcas_tbUsuarios_Marc_UsuarioCreacion");

                entity.HasOne(d => d.Marc_UsuarioModificacionNavigation)
                    .WithMany(p => p.tbMarcasMarc_UsuarioModificacionNavigation)
                    .HasForeignKey(d => d.Marc_UsuarioModificacion)
                    .HasConstraintName("tbMarcas_tbUsuarios_Marc_UsuarioModificacion");
            });

            modelBuilder.Entity<tbMateriales>(entity =>
            {
                entity.HasKey(e => e.Mate_Id)
                    .HasName("PK__tbMateri__E95FAA0DD83E11E6");

                entity.ToTable("tbMateriales", "Gral");

                entity.Property(e => e.Mate_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.Mate_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.Mate_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.Mate_Material)
                    .IsRequired()
                    .HasMaxLength(60)
                    .IsUnicode(false);

                entity.HasOne(d => d.Mate_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbMaterialesMate_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.Mate_UsuarioCreacion)
                    .HasConstraintName("tbMateriales_tbUsuarios_Marc_UsuarioCreacion");

                entity.HasOne(d => d.Mate_UsuarioModificacionNavigation)
                    .WithMany(p => p.tbMaterialesMate_UsuarioModificacionNavigation)
                    .HasForeignKey(d => d.Mate_UsuarioModificacion)
                    .HasConstraintName("tbMateriales_tbUsuarios_Marc_UsuarioModificacion");
            });

            modelBuilder.Entity<tbMetodosPago>(entity =>
            {
                entity.HasKey(e => e.Mepa_Id)
                    .HasName("PK__tbMetodo__F1D948289416AC7F");

                entity.ToTable("tbMetodosPago", "Gral");

                entity.Property(e => e.Mepa_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.Mepa_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.Mepa_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.Mepa_Metodo)
                    .IsRequired()
                    .HasMaxLength(60)
                    .IsUnicode(false);

                entity.HasOne(d => d.Mepa_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbMetodosPagoMepa_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.Mepa_UsuarioCreacion)
                    .HasConstraintName("tbMetodosPago_tbUsuarios_Mepa_UsuarioCreacion");

                entity.HasOne(d => d.Mepa_UsuarioModificacionNavigation)
                    .WithMany(p => p.tbMetodosPagoMepa_UsuarioModificacionNavigation)
                    .HasForeignKey(d => d.Mepa_UsuarioModificacion)
                    .HasConstraintName("tbMetodosPago_tbUsuarios_Mepa_UsuarioModificacion");
            });

            modelBuilder.Entity<tbMunicipios>(entity =>
            {
                entity.HasKey(e => e.Muni_Codigo)
                    .HasName("PK__tbMunici__289AC12852E126BB");

                entity.ToTable("tbMunicipios", "Gral");

                entity.Property(e => e.Muni_Codigo)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.Depa_Codigo)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.Muni_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.Muni_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.Muni_Municipio)
                    .IsRequired()
                    .HasMaxLength(60)
                    .IsUnicode(false);

                entity.HasOne(d => d.Depa_CodigoNavigation)
                    .WithMany(p => p.tbMunicipios)
                    .HasForeignKey(d => d.Depa_Codigo)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("tbDepartamentos_tbMunicipios_Depa_Codigo");

                entity.HasOne(d => d.Muni_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbMunicipiosMuni_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.Muni_UsuarioCreacion)
                    .HasConstraintName("tbUsuarios_tbUsuarios_Muni_UsuarioCreacion");

                entity.HasOne(d => d.Muni_UsuarioModificacionNavigation)
                    .WithMany(p => p.tbMunicipiosMuni_UsuarioModificacionNavigation)
                    .HasForeignKey(d => d.Muni_UsuarioModificacion)
                    .HasConstraintName("tbUsuarios_tbUsuarios_Muni_UsuarioModificacion");
            });

            modelBuilder.Entity<tbPantallas>(entity =>
            {
                entity.HasKey(e => e.Pant_Id)
                    .HasName("PK__tbPantal__CF98C932F32BDCEB");

                entity.ToTable("tbPantallas", "Acce");

                entity.Property(e => e.Pant_Descripcion)
                    .IsRequired()
                    .HasMaxLength(60)
                    .IsUnicode(false);

                entity.Property(e => e.Pant_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.Pant_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.Pant_FechaModificacion).HasColumnType("datetime");

                entity.HasOne(d => d.Pant_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbPantallasPant_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.Pant_UsuarioCreacion)
                    .HasConstraintName("tbPantallas_tbUsuarios_Pant_UsuarioCreacion");

                entity.HasOne(d => d.Pant_UsuarioModificacionNavigation)
                    .WithMany(p => p.tbPantallasPant_UsuarioModificacionNavigation)
                    .HasForeignKey(d => d.Pant_UsuarioModificacion)
                    .HasConstraintName("tbPantallas_tbUsuarios_Pant_UsuarioModificacion");
            });

            modelBuilder.Entity<tbPantallasXRoles>(entity =>
            {
                entity.HasKey(e => e.Paxr_Id)
                    .HasName("PK__tbPantal__959BB2310295745B");

                entity.ToTable("tbPantallasXRoles", "Acce");

                entity.HasOne(d => d.Pant)
                    .WithMany(p => p.tbPantallasXRoles)
                    .HasForeignKey(d => d.Pant_Id)
                    .HasConstraintName("tbUsuarios_tbPantallas_Esta_Id");

                entity.HasOne(d => d.Role)
                    .WithMany(p => p.tbPantallasXRoles)
                    .HasForeignKey(d => d.Role_Id)
                    .HasConstraintName("tbUsuarios_tbRoles_Role_Id");
            });

            modelBuilder.Entity<tbPreciosBitacora>(entity =>
            {
                entity.HasKey(e => e.Prec_Id)
                    .HasName("PK__tbPrecio__105F32D9F7571FF3");

                entity.ToTable("tbPreciosBitacora", "Vent");

                entity.Property(e => e.Prec_Nombre)
                    .HasMaxLength(60)
                    .IsUnicode(false);

                entity.Property(e => e.Prec_PrecioCompra).HasColumnType("numeric(8, 2)");

                entity.Property(e => e.Prec_PrecioMayor).HasColumnType("numeric(8, 2)");

                entity.Property(e => e.Prec_PrecioVenta).HasColumnType("numeric(8, 2)");
            });

            modelBuilder.Entity<tbProveedores>(entity =>
            {
                entity.HasKey(e => e.Prov_Id)
                    .HasName("PK__tbProvee__39116DB281F5E435");

                entity.ToTable("tbProveedores", "Gral");

                entity.Property(e => e.Muni_Codigo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.Prov_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.Prov_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.Prov_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.Prov_Proveedor)
                    .IsRequired()
                    .HasMaxLength(60)
                    .IsUnicode(false);

                entity.Property(e => e.Prov_Telefono)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.HasOne(d => d.Muni_CodigoNavigation)
                    .WithMany(p => p.tbProveedores)
                    .HasForeignKey(d => d.Muni_Codigo)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("tbProveedores_tbMunicipios_Muni_Codigo");

                entity.HasOne(d => d.Prov_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbProveedoresProv_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.Prov_UsuarioCreacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("tbProveedores_tbUsuarios_Prov_UsuarioCreacion");

                entity.HasOne(d => d.Prov_UsuarioModificacionNavigation)
                    .WithMany(p => p.tbProveedoresProv_UsuarioModificacionNavigation)
                    .HasForeignKey(d => d.Prov_UsuarioModificacion)
                    .HasConstraintName("tbProveedores_tbUsuarios_Prov_UsuarioModificacion");
            });

            modelBuilder.Entity<tbRoles>(entity =>
            {
                entity.HasKey(e => e.Role_Id)
                    .HasName("PK__tbRoles__D80AB4BBE6EC6EC7");

                entity.ToTable("tbRoles", "Acce");

                entity.Property(e => e.Role_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.Role_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.Role_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.Role_Rol)
                    .IsRequired()
                    .HasMaxLength(60)
                    .IsUnicode(false);

                entity.HasOne(d => d.Role_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbRolesRole_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.Role_UsuarioCreacion)
                    .HasConstraintName("tbRoles_tbUsuarios_Role_UsuarioCreacion");

                entity.HasOne(d => d.Role_UsuarioModificacionNavigation)
                    .WithMany(p => p.tbRolesRole_UsuarioModificacionNavigation)
                    .HasForeignKey(d => d.Role_UsuarioModificacion)
                    .HasConstraintName("tbRoles_tbUsuarios_Role_UsuarioModificacion");
            });

            modelBuilder.Entity<tbSucursales>(entity =>
            {
                entity.HasKey(e => e.Sucu_Id)
                    .HasName("PK__tbSucurs__23271C401806958F");

                entity.ToTable("tbSucursales", "Gral");

                entity.Property(e => e.Muni_Codigo)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.Sucu_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.Sucu_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.Sucu_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.Sucu_Nombre)
                    .HasMaxLength(60)
                    .IsUnicode(false);

                entity.HasOne(d => d.Muni_CodigoNavigation)
                    .WithMany(p => p.tbSucursales)
                    .HasForeignKey(d => d.Muni_Codigo)
                    .HasConstraintName("tbSucursales_tbMunicipios_Muni_Codigo");

                entity.HasOne(d => d.Sucu_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbSucursalesSucu_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.Sucu_UsuarioCreacion)
                    .HasConstraintName("tbSucursales_tbUsuarios_Prov_UsuarioCreacion");

                entity.HasOne(d => d.Sucu_UsuarioModificacionNavigation)
                    .WithMany(p => p.tbSucursalesSucu_UsuarioModificacionNavigation)
                    .HasForeignKey(d => d.Sucu_UsuarioModificacion)
                    .HasConstraintName("tbSucursales_tbUsuarios_Prov_UsuarioModificacion");
            });

            modelBuilder.Entity<tbUsuarios>(entity =>
            {
                entity.HasKey(e => e.Usua_Id)
                    .HasName("PK__tbUsuari__E863C8EE7A8BE553");

                entity.ToTable("tbUsuarios", "Acce");

                entity.Property(e => e.Usua_Contraseña)
                    .IsRequired()
                    .IsUnicode(false);

                entity.Property(e => e.Usua_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.Usua_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.Usua_Usuario)
                    .IsRequired()
                    .IsUnicode(false);
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}